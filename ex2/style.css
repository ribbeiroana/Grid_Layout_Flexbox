body,
ul,
li,
p {
    margin: 0;
    padding: 0;
    list-style: none;
    /* Para tirar a marcação da lista */
    font-size: 1.2rem;
    font-family: Arial, Helvetica, sans-serif;
}

a {
    text-decoration: none;
    color: #fff;
}

img {
    max-width: 100%;
    /* aumente até 100% do tamanho do container */
    display: block;
}

.header {
    background-color: black;
    display: flex;
    /* para deixar um do lado do outro */
    flex-wrap: wrap;
    /* quando a tela for pequena ele vai quebrar*/
    justify-content: space-between;
    /* espeço entre os itens*/
    padding: 20px;
    align-items: center;
}

.menu {
    display: flex;

}

.menu li {
    margin-left: 10px;
}

.menu li a {
    display: block;
    padding: 10px;
    /* para aumentar a area de clique */
}

/* CSS FLEXBOX 1*/

.flex {
    display: flex;
    flex-wrap: wrap;
    /* pode quebrar*/
    max-width: 800px;
    /* o ideal é que tenha o mesmo tamanho dos outros itens da sessão */
    margin: 0 auto;
    /* alinhar ao centro quando passar dos 800px */
}

.flex>div

/* para falar com a div da classe flex*/
    {
    flex: 1 1 200px;
    /* o Primeiro 1 é para que ele possa se expandir e o segundo 1 é para que ele possa diminuir também e o 200px é o tamanho da base -  quando ele tiver menos que 200px ele vai quebrar*/
    margin: 10px;
}

/* CSS GRID */

.grid1 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* como esta repetindo pode usar o repeat */
    /*para definir quantas colunas terá o grid - fr (1fr 1fr 1fr define 3 colunas) é uma unidade fracional*/
    max-width: 780px;
    margin: 0 auto;
    grid-gap: 20px;
}

.grid1>div:nth-child(n + 4) {
    /* :nth-child() para escolher o filho - :nth-child(1) se eu colocar o 1 ele escolhe a div 1 como filho - div:nth-child(n + 4) n + 4 ele adiciona a partir do 4 item como filho*/
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 10px;
    align-items: center;
}

.grid1>div.anuncio {
    /* .grid1>div - para deixar no mesmo nível */
    grid-column: 1;
    /* uma coluna*/
    grid-row: 2 / 5;
    /* grid linha vai de 2 ate o 5*/
    display: block;
    /* block para voltar o formato original */
}

/* Usar media query para deixar responsivo */
@media (max-width: 600px) {

    /* todo que for abaixo de 600 pixels vai aplicar */
    .grid1 {
        grid-template-columns: 1fr;
    }

    .grid1>div:nth-child(n + 4) {
        display: block;
        /* quando muda para display block os outros valores não são aplicados */
    }

    .grid1>div.anuncio {
        grid-column: auto;
        grid-row: auto;
        /* resetando os valores de grid*/
        order: -1; /* muda as ordens */ 
    }
}